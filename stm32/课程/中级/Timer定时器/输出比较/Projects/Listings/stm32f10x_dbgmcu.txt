; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o..\output\stm32f10x_dbgmcu.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\output\stm32f10x_dbgmcu.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Drivers\CMSIS -I..\Drivers\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\Drivers\BSP\SYS -I..\Drivers\BSP\SYSTICK -I..\Drivers\BSP\USART -I..\Middlewares\FreeRTOS\include -I..\Middlewares\FreeRTOS\portable\RVDS\ARM_CM3 -I..\Drivers\BSP\LED -I..\Drivers\BSP\OLED -I..\Drivers\BSP\TIM -I..\Drivers\BSP\PWM -I..\Drivers\BSP\SYSTICK -I..\Drivers\BSP\SYS -ID:\AppData\keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.4.1\Device\Include -D__MICROLIB -D__UVISION_VERSION=540 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\output\stm32f10x_dbgmcu.crf ..\Drivers\STM32F10x_StdPeriph_Driver\src\stm32f10x_dbgmcu.c]
                          THUMB

                          AREA ||i.DBGMCU_Config||, CODE, READONLY, ALIGN=2

                  DBGMCU_Config PROC
;;;132      */
;;;133    void DBGMCU_Config(uint32_t DBGMCU_Periph, FunctionalState NewState)
000000  b129              CBZ      r1,|L1.14|
;;;134    {
;;;135      /* Check the parameters */
;;;136      assert_param(IS_DBGMCU_PERIPH(DBGMCU_Periph));
;;;137      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;138    
;;;139      if (NewState != DISABLE)
;;;140      {
;;;141        DBGMCU->CR |= DBGMCU_Periph;
000002  4a06              LDR      r2,|L1.28|
000004  6852              LDR      r2,[r2,#4]
000006  4302              ORRS     r2,r2,r0
000008  4b04              LDR      r3,|L1.28|
00000a  605a              STR      r2,[r3,#4]
00000c  e004              B        |L1.24|
                  |L1.14|
;;;142      }
;;;143      else
;;;144      {
;;;145        DBGMCU->CR &= ~DBGMCU_Periph;
00000e  4a03              LDR      r2,|L1.28|
000010  6852              LDR      r2,[r2,#4]
000012  4382              BICS     r2,r2,r0
000014  4b01              LDR      r3,|L1.28|
000016  605a              STR      r2,[r3,#4]
                  |L1.24|
;;;146      }
;;;147    }
000018  4770              BX       lr
;;;148    
                          ENDP

00001a  0000              DCW      0x0000
                  |L1.28|
                          DCD      0xe0042000

                          AREA ||i.DBGMCU_GetDEVID||, CODE, READONLY, ALIGN=2

                  DBGMCU_GetDEVID PROC
;;;92       */
;;;93     uint32_t DBGMCU_GetDEVID(void)
000000  4802              LDR      r0,|L2.12|
;;;94     {
;;;95        return(DBGMCU->IDCODE & IDCODE_DEVID_MASK);
000002  6800              LDR      r0,[r0,#0]
000004  f3c0000b          UBFX     r0,r0,#0,#12
;;;96     }
000008  4770              BX       lr
;;;97     
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      0xe0042000

                          AREA ||i.DBGMCU_GetREVID||, CODE, READONLY, ALIGN=2

                  DBGMCU_GetREVID PROC
;;;82       */
;;;83     uint32_t DBGMCU_GetREVID(void)
000000  4801              LDR      r0,|L3.8|
;;;84     {
;;;85        return(DBGMCU->IDCODE >> 16);
000002  6800              LDR      r0,[r0,#0]
000004  0c00              LSRS     r0,r0,#16
;;;86     }
000006  4770              BX       lr
;;;87     
                          ENDP

                  |L3.8|
                          DCD      0xe0042000
