; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o..\output\bsp_systick.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\output\bsp_systick.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Drivers\CMSIS -I..\Drivers\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\Drivers\BSP\SYS -I..\Drivers\BSP\SYSTICK -I..\Drivers\BSP\USART -I..\Middlewares\FreeRTOS\include -I..\Middlewares\FreeRTOS\portable\RVDS\ARM_CM3 -I..\Drivers\BSP\LED -I..\Drivers\BSP\OLED -I..\Drivers\BSP\TIM -I..\Drivers\BSP\PWM -I..\Drivers\BSP\SYSTICK -I..\Drivers\BSP\SYS -ID:\AppData\keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.4.1\Device\Include -D__MICROLIB -D__UVISION_VERSION=540 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\output\bsp_systick.crf ..\Drivers\BSP\SYSTICK\bsp_systick.c]
                          THUMB

                          AREA ||i.SysTick_Init||, CODE, READONLY, ALIGN=2

                  SysTick_Init PROC
;;;38      */
;;;39     void SysTick_Init(uint16_t sysclk)
000000  b510              PUSH     {r4,lr}
;;;40     {
000002  4604              MOV      r4,r0
;;;41     #if SYS_SUPPORT_OS
;;;42     	uint32_t reload;
;;;43     #endif
;;;44     	SysTick->CTRL = 0;
000004  2000              MOVS     r0,#0
000006  f04f21e0          MOV      r1,#0xe000e000
00000a  6108              STR      r0,[r1,#0x10]
;;;45     	SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK_Div8);
00000c  1f40              SUBS     r0,r0,#5
00000e  f7fffffe          BL       SysTick_CLKSourceConfig
;;;46     	g_fac_us = sysclk / 8;
000012  4620              MOV      r0,r4
000014  17e1              ASRS     r1,r4,#31
000016  eb047151          ADD      r1,r4,r1,LSR #29
00001a  f3c101cf          UBFX     r1,r1,#3,#16
00001e  4a01              LDR      r2,|L1.36|
000020  8011              STRH     r1,[r2,#0]
;;;47     #if SYS_SUPPORT_OS
;;;48     	reload = sysclk / 8;
;;;49     	/* 使用 configTICK_RATE_HZ 计算重装载值
;;;50     	* configTICK_RATE_HZ 在 FreeRTOSConfig.h 中定义
;;;51     	*/
;;;52     	reload *= 1000000 / configTICK_RATE_HZ;
;;;53     	/* 删除不用的 g_fac_ms 相关代码 */
;;;54     	SysTick->CTRL |= 1 << 1;
;;;55     	SysTick->LOAD = reload;
;;;56     	SysTick->CTRL |= 1 << 0;
;;;57     #endif
;;;58     }
000022  bd10              POP      {r4,pc}
;;;59     
                          ENDP

                  |L1.36|
                          DCD      g_fac_us

                          AREA ||i.delay_ms||, CODE, READONLY, ALIGN=2

                  delay_ms PROC
;;;141     */
;;;142    void delay_ms(uint16_t nms)
000000  b570              PUSH     {r4-r6,lr}
;;;143    {
000002  4604              MOV      r4,r0
;;;144        uint32_t repeat = nms / 1000;   /*  这里用1000,是考虑到可能有超频应用,
000004  f44f707a          MOV      r0,#0x3e8
000008  fb94f5f0          SDIV     r5,r4,r0
;;;145                                         *  比如128Mhz的时候, delay_us最大只能延时1048576us左右了
;;;146                                         */
;;;147        uint32_t remain = nms % 1000;
00000c  fb94f1f0          SDIV     r1,r4,r0
000010  fb004611          MLS      r6,r0,r1,r4
;;;148    
;;;149        while (repeat)
000014  e003              B        |L2.30|
                  |L2.22|
;;;150        {
;;;151            delay_us(1000 * 1000);      /* 利用delay_us 实现 1000ms 延时 */
000016  4807              LDR      r0,|L2.52|
000018  f7fffffe          BL       delay_us
;;;152            repeat--;
00001c  1e6d              SUBS     r5,r5,#1
                  |L2.30|
00001e  2d00              CMP      r5,#0                 ;149
000020  d1f9              BNE      |L2.22|
;;;153        }
;;;154    
;;;155        if (remain)
000022  b12e              CBZ      r6,|L2.48|
;;;156        {
;;;157            delay_us(remain * 1000);    /* 利用delay_us, 把尾数延时(remain ms)给做了 */
000024  f44f717a          MOV      r1,#0x3e8
000028  fb06f001          MUL      r0,r6,r1
00002c  f7fffffe          BL       delay_us
                  |L2.48|
;;;158        }
;;;159    }
000030  bd70              POP      {r4-r6,pc}
;;;160    
                          ENDP

000032  0000              DCW      0x0000
                  |L2.52|
                          DCD      0x000f4240

                          AREA ||i.delay_us||, CODE, READONLY, ALIGN=2

                  delay_us PROC
;;;120     */
;;;121    void delay_us(uint32_t nus)
000000  4601              MOV      r1,r0
;;;122    {
;;;123        uint32_t temp;
;;;124        SysTick->LOAD = nus * g_fac_us; /* 时间加载 */
000002  4a11              LDR      r2,|L3.72|
000004  8812              LDRH     r2,[r2,#0]  ; g_fac_us
000006  434a              MULS     r2,r1,r2
000008  f04f23e0          MOV      r3,#0xe000e000
00000c  615a              STR      r2,[r3,#0x14]
;;;125        SysTick->VAL = 0x00;            /* 清空计数器 */
00000e  2200              MOVS     r2,#0
000010  619a              STR      r2,[r3,#0x18]
;;;126        SysTick->CTRL |= 1 << 0 ;       /* 开始倒数 */
000012  461a              MOV      r2,r3
000014  6912              LDR      r2,[r2,#0x10]
000016  f0420201          ORR      r2,r2,#1
00001a  611a              STR      r2,[r3,#0x10]
;;;127    
;;;128        do
00001c  bf00              NOP      
                  |L3.30|
;;;129        {
;;;130            temp = SysTick->CTRL;
00001e  f04f22e0          MOV      r2,#0xe000e000
000022  6910              LDR      r0,[r2,#0x10]
;;;131        } while ((temp & 0x01) && !(temp & (1 << 16))); /* CTRL.ENABLE位必须为1, 并等待时间到达 */
000024  f0000201          AND      r2,r0,#1
000028  b11a              CBZ      r2,|L3.50|
00002a  f4003280          AND      r2,r0,#0x10000
00002e  2a00              CMP      r2,#0
000030  d0f5              BEQ      |L3.30|
                  |L3.50|
;;;132    
;;;133        SysTick->CTRL &= ~(1 << 0) ;    /* 关闭SYSTICK */
000032  f04f22e0          MOV      r2,#0xe000e000
000036  6912              LDR      r2,[r2,#0x10]
000038  f0220201          BIC      r2,r2,#1
00003c  f04f23e0          MOV      r3,#0xe000e000
000040  611a              STR      r2,[r3,#0x10]
;;;134        SysTick->VAL = 0X00;            /* 清空计数器 */
000042  2200              MOVS     r2,#0
000044  619a              STR      r2,[r3,#0x18]
;;;135    }
000046  4770              BX       lr
;;;136    
                          ENDP

                  |L3.72|
                          DCD      g_fac_us

                          AREA ||.data||, DATA, ALIGN=1

                  g_fac_us
000000  0000              DCW      0x0000
