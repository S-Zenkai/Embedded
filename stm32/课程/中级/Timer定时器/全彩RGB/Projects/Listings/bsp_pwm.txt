; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o..\output\bsp_pwm.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\output\bsp_pwm.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Drivers\CMSIS -I..\Drivers\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\Drivers\BSP\SYS -I..\Drivers\BSP\SYSTICK -I..\Drivers\BSP\USART -I..\Middlewares\FreeRTOS\include -I..\Middlewares\FreeRTOS\portable\RVDS\ARM_CM3 -I..\Drivers\BSP\LED -I..\Drivers\BSP\OLED -I..\Drivers\BSP\TIM -I..\Drivers\BSP\PWM -I..\Drivers\BSP\SYSTICK -I..\Drivers\BSP\SYS -ID:\AppData\keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.4.1\Device\Include -D__MICROLIB -D__UVISION_VERSION=540 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\output\bsp_pwm.crf ..\Drivers\BSP\PWM\bsp_pwm.c]
                          THUMB

                          AREA ||i.GPIOTimInit||, CODE, READONLY, ALIGN=2

                  GPIOTimInit PROC
;;;18     
;;;19     static void GPIOTimInit(void)
000000  b508              PUSH     {r3,lr}
;;;20     {
;;;21         GPIO_InitTypeDef GPIOInitStructuer;
;;;22         PWM_GPIO_APBxClock_FUN(PWM_GPIO_CLK, ENABLE);
000002  2101              MOVS     r1,#1
000004  2008              MOVS     r0,#8
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;23     
;;;24         GPIOInitStructuer.GPIO_Mode = GPIO_Mode_AF_PP;
00000a  2018              MOVS     r0,#0x18
00000c  f88d0003          STRB     r0,[sp,#3]
;;;25         GPIOInitStructuer.GPIO_Pin = PWM_GPIOG_Pin;
000010  2001              MOVS     r0,#1
000012  f8ad0000          STRH     r0,[sp,#0]
;;;26         GPIOInitStructuer.GPIO_Speed = GPIO_Speed_50MHz;
000016  2003              MOVS     r0,#3
000018  f88d0002          STRB     r0,[sp,#2]
;;;27         GPIO_Init(PWM_GPIO_Port, &GPIOInitStructuer);
00001c  4669              MOV      r1,sp
00001e  4809              LDR      r0,|L1.68|
000020  f7fffffe          BL       GPIO_Init
;;;28     
;;;29         GPIOInitStructuer.GPIO_Pin = PWM_GPIOR_Pin;
000024  2020              MOVS     r0,#0x20
000026  f8ad0000          STRH     r0,[sp,#0]
;;;30         GPIO_Init(PWM_GPIO_Port, &GPIOInitStructuer);
00002a  4669              MOV      r1,sp
00002c  4805              LDR      r0,|L1.68|
00002e  f7fffffe          BL       GPIO_Init
;;;31     
;;;32         GPIOInitStructuer.GPIO_Pin = PWM_GPIOB_Pin;
000032  2002              MOVS     r0,#2
000034  f8ad0000          STRH     r0,[sp,#0]
;;;33         GPIO_Init(PWM_GPIO_Port, &GPIOInitStructuer);
000038  4669              MOV      r1,sp
00003a  4802              LDR      r0,|L1.68|
00003c  f7fffffe          BL       GPIO_Init
;;;34     }
000040  bd08              POP      {r3,pc}
;;;35     
                          ENDP

000042  0000              DCW      0x0000
                  |L1.68|
                          DCD      0x40010c00

                          AREA ||i.TimBaseInit||, CODE, READONLY, ALIGN=2

                  TimBaseInit PROC
;;;3      
;;;4      static void TimBaseInit(void)
000000  b50e              PUSH     {r1-r3,lr}
;;;5      {
;;;6         TIM_TimeBaseInitTypeDef TimBaseInitStructure;
;;;7         PWM_Timx_APBxClock_FUN(PWM_Timx_CLK, ENABLE);
000002  2101              MOVS     r1,#1
000004  2002              MOVS     r0,#2
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;8         /*选择内部时钟*/
;;;9         TIM_InternalClockConfig(PWM_Timx);
00000a  480b              LDR      r0,|L2.56|
00000c  f7fffffe          BL       TIM_InternalClockConfig
;;;10        TimBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;
000010  2000              MOVS     r0,#0
000012  f8ad0006          STRH     r0,[sp,#6]
;;;11        TimBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;
000016  f8ad0002          STRH     r0,[sp,#2]
;;;12        TimBaseInitStructure.TIM_Period=100-1;
00001a  2063              MOVS     r0,#0x63
00001c  f8ad0004          STRH     r0,[sp,#4]
;;;13        TimBaseInitStructure.TIM_Prescaler=720-1;
000020  f24020cf          MOV      r0,#0x2cf
000024  f8ad0000          STRH     r0,[sp,#0]
;;;14        TimBaseInitStructure.TIM_RepetitionCounter = 0;
000028  2000              MOVS     r0,#0
00002a  f88d0008          STRB     r0,[sp,#8]
;;;15        TIM_TimeBaseInit(PWM_Timx, &TimBaseInitStructure);
00002e  4669              MOV      r1,sp
000030  4801              LDR      r0,|L2.56|
000032  f7fffffe          BL       TIM_TimeBaseInit
;;;16     }
000036  bd0e              POP      {r1-r3,pc}
;;;17     
                          ENDP

                  |L2.56|
                          DCD      0x40000400

                          AREA ||i.TimOCxInit||, CODE, READONLY, ALIGN=2

                  TimOCxInit PROC
;;;43      */
;;;44     void TimOCxInit(void)
000000  b51f              PUSH     {r0-r4,lr}
;;;45     {
;;;46         TIM_OCInitTypeDef TimOCxInitStructuer;
;;;47     
;;;48         TimBaseInit();/*时基单元初始化*/
000002  f7fffffe          BL       TimBaseInit
;;;49     
;;;50         GPIOTimInit();
000006  f7fffffe          BL       GPIOTimInit
;;;51     
;;;52         TIM_OCStructInit(&TimOCxInitStructuer);
00000a  4668              MOV      r0,sp
00000c  f7fffffe          BL       TIM_OCStructInit
;;;53         // TimOCxInitStructuer.TIM_OCIdleState;
;;;54         TimOCxInitStructuer.TIM_OCMode = TIM_OCMode_PWM1;
000010  2060              MOVS     r0,#0x60
000012  f8ad0000          STRH     r0,[sp,#0]
;;;55         // TimOCxInitStructuer.TIM_OCNIdleState;
;;;56         // TimOCxInitStructuer.TIM_OCNPolarity;
;;;57         TimOCxInitStructuer.TIM_OCPolarity = TIM_OCPolarity_High;/*这个有什么用？试试另一个*/
000016  2000              MOVS     r0,#0
000018  f8ad0008          STRH     r0,[sp,#8]
;;;58         // TimOCxInitStructuer.TIM_OutputNState;
;;;59         TimOCxInitStructuer.TIM_OutputState = TIM_OutputState_Enable;
00001c  2001              MOVS     r0,#1
00001e  f8ad0002          STRH     r0,[sp,#2]
;;;60         TimOCxInitStructuer.TIM_Pulse=100;/**/
000022  2064              MOVS     r0,#0x64
000024  f8ad0006          STRH     r0,[sp,#6]
;;;61         TIM_OC3Init(PWM_Timx, &TimOCxInitStructuer);
000028  4669              MOV      r1,sp
00002a  4808              LDR      r0,|L3.76|
00002c  f7fffffe          BL       TIM_OC3Init
;;;62     
;;;63         TIM_OC4Init(PWM_Timx, &TimOCxInitStructuer);
000030  4669              MOV      r1,sp
000032  4806              LDR      r0,|L3.76|
000034  f7fffffe          BL       TIM_OC4Init
;;;64     
;;;65         TIM_OC2Init(PWM_Timx, &TimOCxInitStructuer);
000038  4669              MOV      r1,sp
00003a  4804              LDR      r0,|L3.76|
00003c  f7fffffe          BL       TIM_OC2Init
;;;66     
;;;67         TIM_Cmd(PWM_Timx, ENABLE);
000040  2101              MOVS     r1,#1
000042  4802              LDR      r0,|L3.76|
000044  f7fffffe          BL       TIM_Cmd
;;;68     }
000048  bd1f              POP      {r0-r4,pc}
                          ENDP

00004a  0000              DCW      0x0000
                  |L3.76|
                          DCD      0x40000400
